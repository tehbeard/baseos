METHODMAN: Practical display for in game documentation of computercraft + addons

Peripheral found
	Side: bottom
	Type: appeng_me_tilecraftingterminal

appeng_me_tilecraftingterminal method list:

	canHoldNewItem
	containsItemType
	countOfItemType
	extractItem
	getAdvancedMethodsData
	getAvailableItems
	getFreeBytes
	getName
	getPreformattedItems
	getPriority
	getRemainingItemCount
	getRemainingItemTypes
	getStoredItemCount
	getStoredItemTypes
	getTotalBytes
	getTotalItemTypes
	getUnusedBytes
	getUnusedItemCount
	insertItem
	isFuzzyPreformatted
	isPreformatted
	listMethods
	requestCrafting

Open Peripherals Advanced Method Data

getPreformattedItems. getPreformattedItems

Return Type: TABLE
Description: Get a list of the preformatted items

	Arguments: getPreformattedItems()
	No Arguments

isPreformatted. isPreformatted

Return Type: BOOLEAN
Description: Is preformatted

	Arguments: isPreformatted()
	No Arguments

getAdvancedMethodsData. getAdvancedMethodsData

Return Type: TABLE
Description: Get a complete table of information about all available methods

	Arguments: getAdvancedMethodsData()
	No Arguments

getName. getName

Return Type: STRING
Description: Get the name of this cell

	Arguments: getName()
	No Arguments

getUnusedItemCount. getUnusedItemCount

Return Type: NUMBER
Description: Get the unused item count

	Arguments: getUnusedItemCount()
	No Arguments

extractItem. extractItem

Return Type: NUMBER
Description: Extract an item

	Arguments: extractItem(stack, direction)

		1. stack
		Description: A table representing the item stack
		Type: TABLE
		2. direction
		Description: The direction of the chest relative to the wrapped peripheral
		Type: STRING

listMethods. listMethods

Return Type: STRING
Description: List all the methods available

	Arguments: listMethods()
	No Arguments

canHoldNewItem. canHoldNewItem

Return Type: NUMBER
Description: Can this machine hold any new items?

	Arguments: canHoldNewItem()
	No Arguments

containsItemType. containsItemType

Return Type: BOOLEAN
Description: Check to see if the network contains an item type

	Arguments: containsItemType(itemId, dmgValue)

		1. itemId
		Description: The item id
		Type: NUMBER
		2. dmgValue
		Description: The item dmg value
		Type: NUMBER

getStoredItemTypes. getStoredItemTypes

Return Type: NUMBER
Description: Get the amount of stored item types

	Arguments: getStoredItemTypes()
	No Arguments

getPriority. getPriority

Return Type: NUMBER
Description: Get the priority of this machine

	Arguments: getPriority()
	No Arguments

getRemainingItemTypes. getRemainingItemTypes

Return Type: NUMBER
Description: Get the remaining item type count

	Arguments: getRemainingItemTypes()
	No Arguments

isFuzzyPreformatted. isFuzzyPreformatted

Return Type: BOOLEAN
Description: Is fuzzy preformatted

	Arguments: isFuzzyPreformatted()
	No Arguments

getRemainingItemCount. getRemainingItemCount

Return Type: NUMBER
Description: Get the remaining item count

	Arguments: getRemainingItemCount()
	No Arguments

insertItem. insertItem

Return Type: NUMBER
Description: Insert an item back into the system

	Arguments: insertItem(slot, amount, direction)

		1. slot
		Description: The slot you wish to send
		Type: NUMBER
		2. amount
		Description: The amount you want to send
		Type: NUMBER
		3. direction
		Description: The direction of the chest relative to the wrapped peripheral
		Type: STRING

getTotalItemTypes. getTotalItemTypes

Return Type: NUMBER
Description: Get the total total item types stored

	Arguments: getTotalItemTypes()
	No Arguments

getAvailableItems. getAvailableItems

Return Type: TABLE
Description: Get a list of the available items

	Arguments: getAvailableItems()
	No Arguments

getUnusedBytes. getUnusedBytes

Return Type: NUMBER
Description: Get the unused bytes

	Arguments: getUnusedBytes()
	No Arguments

getFreeBytes. getFreeBytes

Return Type: NUMBER
Description: Get the amount of free bytes

	Arguments: getFreeBytes()
	No Arguments

getTotalBytes. getTotalBytes

Return Type: NUMBER
Description: Get the total bytes

	Arguments: getTotalBytes()
	No Arguments

countOfItemType. countOfItemType

Return Type: NUMBER
Description: Count the amount of a certain item type

	Arguments: countOfItemType(itemId, dmgValue)

		1. itemId
		Description: The item id
		Type: NUMBER
		2. dmgValue
		Description: The item dmg value
		Type: NUMBER

requestCrafting. requestCrafting

Return Type: VOID
Description: Request crafting of a specific item

	Arguments: requestCrafting(stack)

		1. stack
		Description: A table representing the item stack
		Type: TABLE

getStoredItemCount. getStoredItemCount

Return Type: NUMBER
Description: Get the amount of stored items

	Arguments: getStoredItemCount()
	No Arguments


--------------------

All actual documentation is written by the mod developer who made the peripheral, not me. I just displayed it - happy computercrafting